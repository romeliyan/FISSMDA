/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fissmda;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Romesh
 */
public class CompareAnnualExpenditure extends javax.swing.JFrame {

    Connection con = null;
    
    PreparedStatement pste1 = null; 
    ResultSet rse1 = null;
    
    PreparedStatement pste2 = null; 
    ResultSet rse2 = null;
    
    PreparedStatement pste3 = null; 
    ResultSet rse3 = null;
    
    PreparedStatement pste4 = null; 
    ResultSet rse4 = null;
    
    PreparedStatement pste1w = null; 
    ResultSet rse1w = null;
    
    PreparedStatement pste2w = null; 
    ResultSet rse2w = null;
    
    PreparedStatement pste3w = null; 
    ResultSet rse3w = null;
    
    PreparedStatement pste4w = null; 
    ResultSet rse4w = null;
    
    /**
     * Creates new form CompareAnnualExpenditure
     */
    public CompareAnnualExpenditure() {
        initComponents();
        
        con = DBConnection.connect();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnl7 = new javax.swing.JPanel();
        combut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 91));
        jPanel1.setMaximumSize(new java.awt.Dimension(1276, 815));
        jPanel1.setMinimumSize(new java.awt.Dimension(1276, 815));
        jPanel1.setPreferredSize(new java.awt.Dimension(1276, 815));

        pnl7.setBackground(new java.awt.Color(187, 224, 103));
        pnl7.setLayout(new javax.swing.BoxLayout(pnl7, javax.swing.BoxLayout.LINE_AXIS));

        combut.setBackground(new java.awt.Color(240, 242, 114));
        combut.setText("Compare");
        combut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combutActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Compare Annual Expenditure of the Agency ");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fissmda/ButtonImages/ae.png"))); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fissmda/ButtonImages/backB.png"))); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fissmda/ButtonImages/homeB.png"))); // NOI18N
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("( Right click on the bar chart to see properties [ zoom in | zoom out | print | save as photo ] )");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combut, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(352, 352, 352))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(pnl7, javax.swing.GroupLayout.PREFERRED_SIZE, 1072, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combut, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(pnl7, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combutActionPerformed
        
        
         try{
                String sqle1 = "SELECT SUM(amount) As manuw FROM payment WHERE paidDate >= '2017/01/01' and paidDate <= '2017/12/31' ";
                 pste1 = con.prepareStatement(sqle1);
                 rse1 = pste1.executeQuery(); 
                // System.out.println(month);
        
                 if(rse1.next()){
        
                         String tt = rse1.getString("manuw");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se1 = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se1 = tot;
                         }
                     }
            
              }catch(SQLException e){
        
            
        }
        
        try{
                String sqle2 = "SELECT SUM(amount) As vehicle FROM vehicle_log WHERE paidDate >= '2017/01/01' and paidDate <= '2017/12/31' ";
                 pste2 = con.prepareStatement(sqle2);
                 rse2 = pste2.executeQuery(); 
                // System.out.println(month);
        
                 if(rse2.next()){
        
                         String tt = rse2.getString("vehicle");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se2 = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se2 = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sqle3 = "SELECT SUM(amount) As warehouse FROM expenditure WHERE paidDate >= '2017/01/01' and paidDate <= '2017/12/31' ";
                 pste3 = con.prepareStatement(sqle3);
                 rse3 = pste3.executeQuery(); 
                // System.out.println(month);
        
                 if(rse3.next()){
        
                         String tt = rse3.getString("warehouse");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se3 = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se3 = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sqle4 = "SELECT SUM(salary) As sala FROM payroll WHERE paidDate >= '2017/01/01' and paidDate <= '2017/12/31' ";
                 pste4 = con.prepareStatement(sqle4);
                 rse4 = pste4.executeQuery(); 
                // System.out.println(month);
        
                 if(rse4.next()){
        
                         String tt = rse4.getString("sala");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se4 = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se4 = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        //*******************************************2018********************************
        
        try{
                String sqle1w = "SELECT SUM(amount) As manuw FROM payment WHERE paidDate >= '2018/01/01' and paidDate <= '2018/12/31' ";
                 pste1w = con.prepareStatement(sqle1w);
                 rse1w = pste1.executeQuery(); 
                // System.out.println(month);
        
                 if(rse1w.next()){
        
                         String tt = rse1w.getString("manuw");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se1w = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se1w = tot;
                         }
                     }
            
              }catch(SQLException e){
        
            
        }
        
        try{
                String sqle2w = "SELECT SUM(amount) As vehiclew FROM vehicle_log WHERE paidDate >= '2018/01/01' and paidDate <= '2018/12/31' ";
                 pste2w = con.prepareStatement(sqle2w);
                 rse2w = pste2w.executeQuery(); 
                // System.out.println(month);
        
                 if(rse2w.next()){
        
                         String tt = rse2w.getString("vehiclew");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se2w = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se2w = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sqle3w = "SELECT SUM(amount) As warehousew FROM expenditure WHERE paidDate >= '2018/01/01' and paidDate <= '2018/12/31' ";
                 pste3w = con.prepareStatement(sqle3w);
                 rse3w = pste3w.executeQuery(); 
                // System.out.println(month);
        
                 if(rse3w.next()){
        
                         String tt = rse3w.getString("warehousew");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se3w = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se3w = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sqle4w = "SELECT SUM(salary) As salaw FROM payroll WHERE paidDate >= '2018/01/01' and paidDate <= '2018/12/31' ";
                 pste4w = con.prepareStatement(sqle4w);
                 rse4w = pste4w.executeQuery(); 
                // System.out.println(month);
        
                 if(rse4w.next()){
        
                         String tt = rse4w.getString("salaw");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se4w = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se4w = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        //**************************************print**************************************************
        
        DefaultCategoryDataset dcd23 = new DefaultCategoryDataset();
        
        dcd23.setValue(se1,"2017","Manufacturer");
        dcd23.setValue(se1w,"2018","Manufacturer");
        dcd23.setValue(se2,"2017","Vehicle");
        dcd23.setValue(se2w,"2018","Vehicle");
        dcd23.setValue(se3,"2017","Warehouse");
        dcd23.setValue(se3w,"2018","Warehouse");
        dcd23.setValue(se4,"2017","Salaries");
        dcd23.setValue(se4w,"2018","Salaries");
        
        JFreeChart jchart5 = ChartFactory.createBarChart("Agency Expenditure ", "Expenditure Type", "Value Rs.", dcd23, PlotOrientation.VERTICAL, true , true, false);
        
        CategoryPlot plot = jchart5.getCategoryPlot();
        
       
        plot.getRenderer().setSeriesPaint(1, new Color(0, 128, 128));
       
        
        
      
        plot.setBackgroundPaint(new Color(187, 224, 103));
        plot.setRangeGridlinePaint(Color.black);
        
        ChartFrame chartFrm = new ChartFrame("Shop Income",jchart5,true);
        chartFrm.setVisible(false);
        chartFrm.setSize(500, 400);
        
        ChartPanel chartPanel = new ChartPanel(jchart5);
        
        pnl7.removeAll();
        pnl7.add(chartPanel);
        pnl7.updateUI();
    
        
        
        
    }//GEN-LAST:event_combutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         //navigate to back
        AnnualSummaryExpenditure ex1 = new AnnualSummaryExpenditure();
        ex1.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        ex1.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        this.dispose();
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        //navigate to main
        MainUI ex2 = new MainUI();
        ex2.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        ex2.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        this.dispose();
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompareAnnualExpenditure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompareAnnualExpenditure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompareAnnualExpenditure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompareAnnualExpenditure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompareAnnualExpenditure().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combut;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnl7;
    // End of variables declaration//GEN-END:variables


    private double se1;
    private double se2;
    private double se3;
    private double se4;
    
    private double se1w;
    private double se2w;
    private double se3w;
    private double se4w;

}
