/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fissmda;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import static com.sun.javafx.webkit.theme.Renderer.getRenderer;
import java.awt.Color;
import static java.awt.Color.blue;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.paint.Color.color;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;


/**
 *
 * @author Romesh
 */
public class AnnualSummary extends javax.swing.JFrame {

     Connection con = null;
    
    PreparedStatement pste1 = null; 
    ResultSet rse1 = null;
    
    PreparedStatement pste2 = null; 
    ResultSet rse2 = null;
    
    PreparedStatement pste3 = null; 
    ResultSet rse3 = null;
    
    PreparedStatement pste4 = null; 
    ResultSet rse4 = null;
    
    PreparedStatement pste1w = null; 
    ResultSet rse1w = null;
    
    PreparedStatement pste2w = null; 
    ResultSet rse2w = null;
    
    PreparedStatement pste3w = null; 
    ResultSet rse3w = null;
    
    PreparedStatement pste4w = null; 
    ResultSet rse4w = null;
    
    
    
    PreparedStatement pst55 = null; 
    ResultSet rs66 = null;
    
    
    PreparedStatement pst7a = null; 
    ResultSet rs7a = null;
    
    
    PreparedStatement pst8a = null; 
    ResultSet rs8a = null;
    
    PreparedStatement pstz1 = null; 
    ResultSet rsz1 = null;
    
    PreparedStatement pstz2 = null; 
    ResultSet rsz2 = null;
    
    PreparedStatement pstz3 = null; 
    ResultSet rsz3 = null;
    
    PreparedStatement pstz4 = null; 
    ResultSet rsz4 = null;
    
    PreparedStatement pstz5 = null; 
    ResultSet rsz5 = null;
    
    PreparedStatement pstz1f = null; 
    ResultSet rsz1f = null;
    
    PreparedStatement pstz2f = null; 
    ResultSet rsz2f = null;
    
    PreparedStatement pstz3f = null; 
    ResultSet rsz3f = null;
    
    PreparedStatement pstz4f = null; 
    ResultSet rsz4f = null;
    
    PreparedStatement pstz5f = null; 
    ResultSet rsz5f = null;
    
    
    
    
    
    
    
    /**
     * Creates new form AnnualSummary
     */
    public AnnualSummary() {
        initComponents();
        
         con = DBConnection.connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        p1 = new javax.swing.JPanel();
        sBut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        com1 = new javax.swing.JComboBox<>();
        pBut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 91));
        jPanel1.setMaximumSize(new java.awt.Dimension(1276, 815));
        jPanel1.setMinimumSize(new java.awt.Dimension(1276, 815));
        jPanel1.setPreferredSize(new java.awt.Dimension(1276, 815));

        p1.setMaximumSize(new java.awt.Dimension(600, 550));
        p1.setMinimumSize(new java.awt.Dimension(600, 550));
        p1.setPreferredSize(new java.awt.Dimension(600, 550));
        p1.setLayout(new javax.swing.BoxLayout(p1, javax.swing.BoxLayout.LINE_AXIS));

        sBut.setBackground(new java.awt.Color(240, 242, 114));
        sBut.setText("OK");
        sBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sButActionPerformed(evt);
            }
        });

        table1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Shop Income", null, null, null},
                {"Manufacturer Payment", null, null, null},
                {"Vehicle Expenses", null, null, null},
                {"Warehouse Expenses", null, null, null},
                {"Salary Payments", null, null, null},
                {"Total", null, null, null}
            },
            new String [] {
                "Type", "Income", "Expenditure", "Profit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.setAlignmentX(1.0F);
        table1.setAlignmentY(1.0F);
        table1.setDoubleBuffered(true);
        table1.setEditingColumn(2);
        table1.setEditingRow(2);
        table1.setIntercellSpacing(new java.awt.Dimension(2, 2));
        table1.setRowHeight(40);
        jScrollPane1.setViewportView(table1);

        com1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Year", "2017", "2018" }));

        pBut.setText("Get");
        pBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pButActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fissmda/ButtonImages/ansum.png"))); // NOI18N

        jLabel2.setText("Agency Annual Summary Report - 2018");

        jButton1.setText("Get");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Agency Annual Summary Report - 2017");

        jLabel10.setText("( Right click on the bar chart to see properties [ zoom in | zoom out | print | save as photo ] )");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Generate Report");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fissmda/ButtonImages/backB.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fissmda/ButtonImages/homeB.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(com1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sBut, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(245, 245, 245)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(p1, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(71, 71, 71))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1)
                                    .addComponent(pBut))
                                .addGap(73, 73, 73))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(20, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(193, 193, 193))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sBut, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(com1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pBut)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sButActionPerformed
        
        String year = com1.getSelectedItem().toString();
        
        
        if(year == "Select Year"){
        
             JOptionPane.showMessageDialog(null,"Please select Year.");
            
        }
        
        else if(year == "2017"){  
        
        
        
        
        
        
        try{
                String sqle1 = "SELECT SUM(amount) As manuw FROM payment WHERE paidDate >= '2017/01/01' and paidDate <= '2017/12/31' ";
                 pste1 = con.prepareStatement(sqle1);
                 rse1 = pste1.executeQuery(); 
                // System.out.println(month);
        
                 if(rse1.next()){
        
                         String tt = rse1.getString("manuw");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se1 = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se1 = tot;
                         }
                     }
            
              }catch(SQLException e){
        
            
        }
        
        try{
                String sqle2 = "SELECT SUM(amount) As vehicle FROM vehicle_log WHERE paidDate >= '2017/01/01' and paidDate <= '2017/12/31' ";
                 pste2 = con.prepareStatement(sqle2);
                 rse2 = pste2.executeQuery(); 
                // System.out.println(month);
        
                 if(rse2.next()){
        
                         String tt = rse2.getString("vehicle");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se2 = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se2 = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sqle3 = "SELECT SUM(amount) As warehouse FROM expenditure WHERE paidDate >= '2017/01/01' and paidDate <= '2017/12/31' ";
                 pste3 = con.prepareStatement(sqle3);
                 rse3 = pste3.executeQuery(); 
                // System.out.println(month);
        
                 if(rse3.next()){
        
                         String tt = rse3.getString("warehouse");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se3 = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se3 = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sqle4 = "SELECT SUM(salary) As sala FROM payroll WHERE paidDate >= '2017/01/01' and paidDate <= '2017/12/31' ";
                 pste4 = con.prepareStatement(sqle4);
                 rse4 = pste4.executeQuery(); 
                // System.out.println(month);
        
                 if(rse4.next()){
        
                         String tt = rse4.getString("sala");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se4 = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se4 = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sql7a = "SELECT SUM(totalAmount) As abc FROM shop_income WHERE iDate >= '2017/01/01' and iDate <= '2017/12/31' ";
                 pst7a = con.prepareStatement(sql7a);
                 rs7a = pst7a.executeQuery(); 
                // System.out.println(month);
        
                 if(rs7a.next()){
        
                         String tt = rs7a.getString("abc");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             ttt = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             ttt = tot;
                         }
                     }
            
              }catch(SQLException e){
        
            
        }
        
        
        
        
        
        
        
        
        
      DefaultPieDataset dataset = new DefaultPieDataset();
      
      
      dataset.setValue("Income - Shop Income", ttt  );
    //  dataset.setValue("2018 Income", aaa );
      dataset.setValue("Expenditure - Manufacturer Payement", se1 );
      dataset.setValue("Expenditure - Vehicle Expenses", se2 );
      dataset.setValue("Expenditure - Warehouses Expenses", se3 );
      dataset.setValue("Expenditure - Salary Payments", se4 );
    //  dataset.setValue("2018 Total Expenditure", e2018 );
     
      
              
              
              
      JFreeChart chart = ChartFactory.createPieChart("2017", dataset, true, true, true);
      
      chart.setBackgroundPaint(new Color(153, 153, 91));
      
      PiePlot P = (PiePlot)chart.getPlot();
    
    
    
      ChartFrame frame = new ChartFrame("Pie Chart",chart);
      frame.setVisible(false);
      frame.setSize(450,500);
      
      
//        
    ChartPanel chartPanel3 = new ChartPanel(chart);
        
        p1.removeAll();
        p1.add(chartPanel3);
        p1.updateUI();
        
      //*******************
      
        double totex17 = se1+se2+se3+se4;
        double profit17 = ttt - totex17; 
      
        DefaultTableModel model = (DefaultTableModel)table1.getModel();
        
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
     
        table1.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        table1.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        table1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        
        table1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        table1.getColumnModel().getColumn(0).setPreferredWidth(230);
        table1.getColumnModel().getColumn(1).setPreferredWidth(120);
        table1.getColumnModel().getColumn(2).setPreferredWidth(120);
        table1.getColumnModel().getColumn(3).setPreferredWidth(120);
        
        
       
  


        
        
        

        model.setValueAt(ttt, 0, 1);
        model.setValueAt(se1, 1, 2);
        model.setValueAt(se2, 2, 2);
        model.setValueAt(se3, 3, 2);
        model.setValueAt(se4, 4, 2);
        model.setValueAt(ttt, 5, 1);
        model.setValueAt(totex17, 5, 2);
        model.setValueAt(profit17, 5, 3);
       
        }
        
        else if( year == "2018"){
        
       
            try{
                String sqle1w = "SELECT SUM(amount) As manuw FROM payment WHERE paidDate >= '2018/01/01' and paidDate <= '2018/12/31' ";
                 pste1w = con.prepareStatement(sqle1w);
                 rse1w = pste1w.executeQuery(); 
                // System.out.println(month);
        
                 if(rse1w.next()){
        
                         String tt = rse1w.getString("manuw");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se1w = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se1w = tot;
                         }
                     }
            
              }catch(SQLException e){
        
            
        }
        
        try{
                String sqle2w = "SELECT SUM(amount) As vehiclew FROM vehicle_log WHERE paidDate >= '2018/01/01' and paidDate <= '2018/12/31' ";
                 pste2w = con.prepareStatement(sqle2w);
                 rse2w = pste2w.executeQuery(); 
                // System.out.println(month);
        
                 if(rse2w.next()){
        
                         String tt = rse2w.getString("vehiclew");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se2w = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se2w = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sqle3w = "SELECT SUM(amount) As warehousew FROM expenditure WHERE paidDate >= '2018/01/01' and paidDate <= '2018/12/31' ";
                 pste3w = con.prepareStatement(sqle3w);
                 rse3w = pste3w.executeQuery(); 
                // System.out.println(month);
        
                 if(rse3w.next()){
        
                         String tt = rse3w.getString("warehousew");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se3w = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se3w = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sqle4w = "SELECT SUM(salary) As sala FROM payroll WHERE paidDate >= '2018/01/01' and paidDate <= '2018/12/31' ";
                 pste4w = con.prepareStatement(sqle4w);
                 rse4w = pste4w.executeQuery(); 
                // System.out.println(month);
        
                 if(rse4w.next()){
        
                         String tt = rse4w.getString("salaw");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             se4w = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             se4w = tot;
                         }
                     }
            
              }catch(SQLException e){
        
              }
        
        try{
                String sql8a = "SELECT SUM(totalAmount) As efg FROM shop_income WHERE iDate >= '2018/01/01' and iDate <= '2018/12/31' ";
                 pst8a = con.prepareStatement(sql8a);
                 rs8a = pst8a.executeQuery(); 
                // System.out.println(month);
        
                 if(rs8a.next()){
        
                         String tt = rs8a.getString("efg");
                         System.out.println(tt);
            
                         if(tt == null){
            
                             aaa = 0;
                         }
                          else if(tt != null){
                             Double tot = Double.parseDouble(tt);
            
                             aaa = tot;
                         }
                     }
            
              }catch(SQLException e){
        
            
        }
        
            
            
            
            
        
        
        
        
        
        
        
      DefaultPieDataset dataset = new DefaultPieDataset();
      
      
      dataset.setValue("Income - Shop Income", aaa  );
    //  dataset.setValue("2018 Income", aaa );
      dataset.setValue("Expenditure - Manufacturer Payement", se1w );
      dataset.setValue("Expenditure - Vehicle Expenses", se2w );
      dataset.setValue("Expenditure - Warehouses Expenses", se3w );
      dataset.setValue("Expenditure - Salary Payments", se4w );
    //  dataset.setValue("2018 Total Expenditure", e2018 );
     
      
              
              
              
      JFreeChart chart = ChartFactory.createPieChart("2018", dataset, true, true, true);
      
      chart.setBackgroundPaint(new Color(153, 153, 91));
      
      PiePlot P = (PiePlot)chart.getPlot();
    
    
    
      ChartFrame frame = new ChartFrame("Pie Chart",chart);
      frame.setVisible(false);
      frame.setSize(450,500);
      
      
//        
    ChartPanel chartPanel3 = new ChartPanel(chart);
        
        p1.removeAll();
        p1.add(chartPanel3);
        p1.updateUI();
        
      //*******************
      
        double totex18 = se1w+se2w+se3w+se4w;
        double profit18 = aaa - totex18; 
      
        DefaultTableModel model = (DefaultTableModel)table1.getModel();
        
        

        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
     
        table1.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        table1.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        table1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);

        table1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        table1.getColumnModel().getColumn(0).setPreferredWidth(230);
        table1.getColumnModel().getColumn(1).setPreferredWidth(120);
        table1.getColumnModel().getColumn(2).setPreferredWidth(120);
        table1.getColumnModel().getColumn(3).setPreferredWidth(120);


        model.setValueAt(aaa, 0, 1);
        model.setValueAt(0, 0, 2);
        model.setValueAt(0, 0, 3);
        
        model.setValueAt(se1w, 1, 2);
        model.setValueAt(0, 1, 1);
        model.setValueAt(0, 1, 3);
        
        model.setValueAt(se2w, 2, 2);
        model.setValueAt(0, 2, 1);
        model.setValueAt(0, 2, 3);
        
        model.setValueAt(se3w, 3, 2);
        model.setValueAt(0, 3, 1);
        model.setValueAt(0, 3, 3);
        
        model.setValueAt(se4w, 4, 2);
        model.setValueAt(0, 4, 1);
        model.setValueAt(0, 4, 3);
        
        model.setValueAt(aaa, 5, 1);
       
        
        model.setValueAt(totex18, 5, 2);
        model.setValueAt(profit18, 5, 3);
        
        
        
        
        
        
        }
        
        
        
        
        
    
        
       
        

        
    
      
        
            
            
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_sButActionPerformed

    private void pButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pButActionPerformed

        
        
         
             
             
             
         try {
             Connection con = DBConnection.connect();
             JasperDesign jd = JRXmlLoader.load("D:\\D Documents\\NetBeans Projects\\FISSMDA\\src\\fissmda\\report2017.jrxml");
             
             String uuu = "select type,income,expenditure,profit from summary";
             JRDesignQuery newQuery = new JRDesignQuery();
             newQuery.setText(uuu);
             jd.setQuery(newQuery);
             
             JasperReport jr = JasperCompileManager.compileReport(jd);
             JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
             JasperViewer.viewReport(jp);
             
             
             
             
             
             
//             
//             try {
//                 String ty1 = "Shop Income";
//                 String ty2 = "Manufacturer Payment";
//                 String ty3 = "Vehicle Expenses";
//                 String ty4 = "Warehouse Expenses";
//                 String ty5 = "Salary Payments";
//                 
//                 String finalz1 = "INSERT INTO summary(type, income, expenditure,profit) values('"+ty1 +"','"+ttt +"','"+zero +"','"+zero +"')";
//                 pstz1= con.prepareStatement(finalz1);
//                 pstz1.execute();
//                 
//                 String finalz2 = "INSERT INTO summary(type, income, expenditure,profit) values('"+ ty2+"','"+zero +"','"+se1 +"','"+zero +"')";
//                 pstz2= con.prepareStatement(finalz2);
//                 pstz2.execute();
//                 
//                 String finalz3 = "INSERT INTO summary(type, income, expenditure,profit) values('"+ ty3+"','"+zero +"','"+se2 +"','"+zero +"')";
//                 pstz3= con.prepareStatement(finalz3);
//                 pstz3.execute();
//                 
//                 String finalz4 = "INSERT INTO summary(type, income, expenditure,profit) values('"+ ty4+"','"+zero +"','"+se3 +"','"+zero +"')";
//                 pstz4= con.prepareStatement(finalz4);
//                 pstz4.execute();
//                 
//                 String finalz5 = "INSERT INTO summary(type, income, expenditure,profit) values('"+ ty5+"','"+zero +"','"+se4 +"','"+zero +"')";
//                 pstz5= con.prepareStatement(finalz5);
//                 pstz5.execute();
//             } catch (SQLException ex) {
//                 Logger.getLogger(AnnualSummary.class.getName()).log(Level.SEVERE, null, ex);
//             }





       
       } catch (JRException ex) {
             Logger.getLogger(AnnualSummary.class.getName()).log(Level.SEVERE, null, ex);
         }
        
       
        

        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_pButActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
//        
        try {
             Connection con = DBConnection.connect();
             JasperDesign jd = JRXmlLoader.load("D:\\D Documents\\NetBeans Projects\\FISSMDA\\src\\fissmda\\report2017.jrxml");
             
             String uuu = "select type,income,expenditure,profit from summary";
             JRDesignQuery newQuery = new JRDesignQuery();
             newQuery.setText(uuu);
             jd.setQuery(newQuery);
             
             JasperReport jr = JasperCompileManager.compileReport(jd);
             JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
             JasperViewer.viewReport(jp);
        
        
        
        
        
        
//         try {
//             String ty1 = "Shop Income";
//             String ty2 = "Manufacturer Payment";
//             String ty3 = "Vehicle Expenses";
//             String ty4 = "Warehouse Expenses";
//             String ty5 = "Salary Payments";
//             
//             String finalz1f = "INSERT INTO summary2(type, income, expenditure,profit) values('"+ty1 +"','"+aaa +"','"+zero +"','"+zero +"')";
//             pstz1f= con.prepareStatement(finalz1f);
//             pstz1f.execute();
//             
//             String finalz2f = "INSERT INTO summary2(type, income, expenditure,profit) values('"+ ty2+"','"+zero +"','"+se1w+"','"+zero +"')";
//             pstz2f= con.prepareStatement(finalz2f);
//             pstz2f.execute();
//             
//             String finalz3f = "INSERT INTO summary2(type, income, expenditure,profit) values('"+ ty3+"','"+zero +"','"+se2w +"','"+zero +"')";
//             pstz3f= con.prepareStatement(finalz3f);
//             pstz3f.execute();
//             
//             String finalz4f = "INSERT INTO summary2(type, income, expenditure,profit) values('"+ ty4+"','"+zero +"','"+se3w +"','"+zero +"')";
//             pstz4f= con.prepareStatement(finalz4f);
//             pstz4f.execute();
//             
//             String finalz5f = "INSERT INTO summary2(type, income, expenditure,profit) values('"+ ty5+"','"+zero +"','"+se4w +"','"+zero +"')";
//             pstz5f= con.prepareStatement(finalz5f);
//             pstz5f.execute();
//         } catch (SQLException ex) {
//             Logger.getLogger(AnnualSummary.class.getName()).log(Level.SEVERE, null, ex);
//         }
//      
        } catch (JRException ex) {
             Logger.getLogger(AnnualSummary.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //navigate to back
        AnnualSummaryType st18 = new AnnualSummaryType();
        st18.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        st18.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        //navigate to mainUI
        MainUI mi16 = new MainUI();
        mi16.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        mi16.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        this.dispose();
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnnualSummary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnnualSummary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnnualSummary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnnualSummary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnnualSummary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> com1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel p1;
    private javax.swing.JButton pBut;
    private javax.swing.JButton sBut;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables

    private double se1;
    private double se2;
    private double se3;
    private double se4;
    
    private double se1w;
    private double se2w;
    private double se3w;
    private double se4w;

    
     private double ttt;
    private double aaa;
    private double zero = 0;



}
